experiment(
  runs =
    (target = (
      body = (shape = [
        s.vsr.s.biped(w = 4; h = 3)
      ]) * [s.vsr.gridBody(
        sensorizingFunction = s.vsr.sf.directional(
          headSensors = [
            s.s.sin(f = 0);
            s.s.d(a = -15; r = 5)
          ];
          nSensors = [
            s.s.ar();
            s.s.rv(a = 0);
            s.s.rv(a = 90)
          ];
          sSensors = [
            s.s.d(a = -90)
          ]
        )
      )]
    ) * [s.a.centralizedNumGridVSR(function = s.f.sinPF())]) *
    (randomGenerator = (seed = [1:1:5]) * [rg.defaultRG()]) * [
    run(
      solver = so.doublesStandard(nEval = 100; nPop = 10);
      mapper = m.toParametrized();
      task = s.task.locomotion(terrain = s.t.flat(); duration = 20);
      comparator = c.max(of = e.locomotionXVelocity())
    )
  ];
  qExtractor = e.locomotionXVelocity();
  bestFileSaver = fileSaver(serializer = ser.javaSerializer());
  videoSaver = videoSaver(drawer = d.basicWithAgentMiniature(); w = 600; h = 400);
  videoTasks = [
    videoTask(task = s.task.locomotion(terrain = s.t.flat(); duration = 20))
  ]
)