experiment(
  runs =
    (randomGenerator = (seed = [1:1:2]) * [rg.defaultRG()])
    * (target =
        (body =
          (shape =
            [
              s.vsr.s.biped(w = 4; h = 3);
              s.vsr.s.free(s = "111110-110011")
            ]
          ) * [s.vsr.gridBody(
                 sensorizingFunction = s.vsr.sf.directional(
                   headSensors = [s.s.sin(f = 0);s.s.d(a = -15; r = 5)];
                   nSensors = [s.s.ar(); s.s.rv(a = 0); s.s.rv(a = 90)];
                   sSensors = [s.s.d(a = -90)]
                 )
               )]
        ) * [s.a.centralizedNumGridVSR(function = s.f.mlp())])
    * (task =
        [
          s.task.locomotion(terrain = s.t.flat(); duration = 15);
          s.task.locomotion(terrain = s.t.hilly(); duration = 15)
        ]
      )
    * [run(
        solver = so.doublesStandard(nEval = 100; nPop = 25);
        mapper = m.toParametrized();
        comparator = c.max(of = e.locomotionXVelocity())
      )];
  qExtractor = e.locomotionXVelocity()
)